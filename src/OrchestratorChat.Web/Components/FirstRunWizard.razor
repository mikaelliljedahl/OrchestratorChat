@namespace OrchestratorChat.Web.Components
@inherits ComponentBase

<MudDialog Visible="@IsVisible" VisibleChanged="@OnVisibilityChanged" MaxWidth="MaxWidth.Medium" DisableBackdropClick="true">
    <TitleContent>
        <MudText Typo="Typo.h5">
            <MudIcon Icon="@Icons.Material.Filled.Rocket" Class="mr-3" />
            Set up your first agent
        </MudText>
    </TitleContent>
    
    <DialogContent>
        <MudStepper @ref="_stepper" Color="Color.Primary" Variant="Variant.Filled" Linear="true" ActiveIndex="@_currentStep" PreventStepNavigation="true">
            <!-- Step 1: Choose Provider -->
            <MudStep Title="Choose a provider">
                @if (_currentStep == 0)
                {
                <MudText Typo="Typo.body1" Class="mb-4">Select your preferred AI provider to get started.</MudText>
                
                <MudGrid>
                    <MudItem xs="12" sm="4">
                        <MudCard Outlined="true" Class="@GetProviderCardClass(ProviderType.ClaudeCli)" @onclick="@(() => SelectProvider(ProviderType.ClaudeCli))">
                            <MudCardContent Class="text-center pa-4">
                                <MudIcon Icon="@Icons.Material.Filled.Code" Size="Size.Large" Class="mb-2" />
                                <MudText Typo="Typo.h6" Class="mb-1">Claude CLI</MudText>
                                <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mb-3">
                                    Fastest path if Claude CLI is installed
                                </MudText>
                                <MudChip T="string" Color="@GetProviderStatusColor(_providerStatus.ClaudeCli)" 
                                        Text="@GetProviderStatusText(_providerStatus.ClaudeCli)" 
                                        Size="Size.Small" />
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                    
                    <MudItem xs="12" sm="4">
                        <MudCard Outlined="true" Class="@GetProviderCardClass(ProviderType.SaturnOpenRouter)" @onclick="@(() => SelectProvider(ProviderType.SaturnOpenRouter))">
                            <MudCardContent Class="text-center pa-4">
                                <MudIcon Icon="@Icons.Material.Filled.Key" Size="Size.Large" Class="mb-2" />
                                <MudText Typo="Typo.h6" Class="mb-1">Saturn → OpenRouter</MudText>
                                <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mb-3">
                                    Use Saturn with your OpenRouter API key
                                </MudText>
                                <MudChip T="string" Color="@GetProviderStatusColor(_providerStatus.OpenRouterKey)" 
                                        Text="@GetProviderStatusText(_providerStatus.OpenRouterKey)" 
                                        Size="Size.Small" />
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                    
                    <MudItem xs="12" sm="4">
                        <MudCard Outlined="true" Class="@GetProviderCardClass(ProviderType.SaturnAnthropic)" @onclick="@(() => SelectProvider(ProviderType.SaturnAnthropic))">
                            <MudCardContent Class="text-center pa-4">
                                <MudIcon Icon="@Icons.Material.Filled.Security" Size="Size.Large" Class="mb-2" />
                                <MudText Typo="Typo.h6" Class="mb-1">Saturn → Anthropic OAuth</MudText>
                                <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mb-3">
                                    Use Saturn with Anthropic OAuth
                                </MudText>
                                <MudChip T="string" Color="@GetProviderStatusColor(_providerStatus.AnthropicOAuth)" 
                                        Text="@GetProviderStatusText(_providerStatus.AnthropicOAuth)" 
                                        Size="Size.Small" />
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                </MudGrid>
                }
            </MudStep>
            
            <!-- Step 2: Verify Provider -->
            <MudStep Title="Verify provider">
            
            <!-- Step 3: Name & Defaults -->
                @if (_currentStep == 1)
                {
                @if (_selectedProvider == ProviderType.ClaudeCli)
                {
                    <MudText Typo="Typo.body1" Class="mb-3">Verifying Claude CLI installation...</MudText>
                    
                    @if (_claudeVerificationLoading)
                    {
                        <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="mb-3" />
                        <MudText Typo="Typo.body2" Color="Color.Secondary">Checking Claude CLI...</MudText>
                    }
                    else if (_claudeVerified.HasValue)
                    {
                        @if (_claudeVerified.Value)
                        {
                            <MudAlert Severity="Severity.Success" Class="mb-3">Claude CLI is detected.</MudAlert>
                        }
                        else
                        {
                            <MudAlert Severity="Severity.Error" Class="mb-3">
                                Not detected. Install from claude.ai/cli or switch to Saturn.
                                <MudButton Href="https://claude.ai/cli" Target="_blank" Color="Color.Primary" Variant="Variant.Text" Class="ml-2">
                                    Install Claude CLI
                                </MudButton>
                            </MudAlert>
                        }
                    }
                }
                else if (_selectedProvider == ProviderType.SaturnOpenRouter)
                {
                    <MudText Typo="Typo.body1" Class="mb-3">Enter your OpenRouter API key to continue.</MudText>
                    
                    @if (_hasExistingOpenRouterKey)
                    {
                        <MudAlert Severity="Severity.Info" Class="mb-3">
                            OpenRouter API key is already configured. Leave blank to use existing key or enter new key to override.
                        </MudAlert>
                    }
                    
                    <MudTextField @bind-Value="_openRouterApiKey" 
                                  Label="OpenRouter API key" 
                                  Variant="Variant.Outlined" 
                                  InputType="InputType.Password"
                                  Placeholder="@(_hasExistingOpenRouterKey ? "Already set - enter new key to override" : "Enter your OpenRouter API key")"
                                  Class="mb-3" />
                    
                    <MudButton Color="Color.Primary" 
                               Variant="Variant.Filled" 
                               OnClick="@ValidateOpenRouterKey"
                               Disabled="@(string.IsNullOrWhiteSpace(_openRouterApiKey) || _openRouterValidationLoading)">
                        @if (_openRouterValidationLoading)
                        {
                            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                            <MudText Class="ms-2">Validating...</MudText>
                        }
                        else
                        {
                            <MudText>Validate</MudText>
                        }
                    </MudButton>
                    
                    @if (_openRouterValidationResult != null)
                    {
                        <MudAlert Severity="@(_openRouterValidationResult.IsValid ? Severity.Success : Severity.Error)" Class="mt-3">
                            @(_openRouterValidationResult.IsValid ? "API key is valid and saved." : _openRouterValidationResult.ErrorMessage ?? "API key missing. Enter your key to continue or switch to Anthropic.")
                        </MudAlert>
                    }
                    else if (!_hasExistingOpenRouterKey)
                    {
                        <MudAlert Severity="Severity.Warning" Class="mt-3">
                            API key missing. Enter your key to continue or switch to Anthropic.
                        </MudAlert>
                    }
                }
                else if (_selectedProvider == ProviderType.SaturnAnthropic)
                {
                    <MudText Typo="Typo.body1" Class="mb-3">Connect your Anthropic account using OAuth.</MudText>
                    
                    @if (_anthropicOAuthStatus?.Connected == true)
                    {
                        <MudAlert Severity="Severity.Success" Class="mb-3">
                            Connected to Anthropic successfully.
                        </MudAlert>
                    }
                    else
                    {
                        <MudAlert Severity="Severity.Warning" Class="mb-3">
                            Not connected to Anthropic.
                        </MudAlert>
                        
                        <div class="d-flex gap-2 mb-2">
                            @if (string.IsNullOrEmpty(_authorizationUrl))
                            {
                                <MudButton Color="Color.Primary" 
                                          Variant="Variant.Filled"
                                          OnClick="@GetAnthropicOAuthUrl"
                                          Disabled="@_anthropicOAuthLoading">
                                    @if (_anthropicOAuthLoading)
                                    {
                                        <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                                        <MudText Class="ms-2">Loading...</MudText>
                                    }
                                    else
                                    {
                                        <MudIcon Icon="@Icons.Material.Filled.Security" Class="mr-1" />
                                        <MudText>Connect to Anthropic</MudText>
                                    }
                                </MudButton>
                            }
                            else
                            {
                                <MudButton Color="Color.Primary" 
                                          Variant="Variant.Filled"
                                          Href="@_authorizationUrl"
                                          Target="_blank"
                                          OnClick="@(() => _showCodeInput = true)">
                                    <MudIcon Icon="@Icons.Material.Filled.Security" Class="mr-1" />
                                    <MudText>Connect to Anthropic</MudText>
                                </MudButton>
                            }
                            
                            <MudButton Color="Color.Secondary" 
                                      Variant="Variant.Outlined" 
                                      OnClick="@CheckAnthropicOAuthStatus"
                                      Disabled="@_anthropicOAuthLoading">
                                <MudIcon Icon="@Icons.Material.Filled.Refresh" Class="mr-1" />
                                <MudText>Check Status</MudText>
                            </MudButton>
                        </div>
                        
                        @if (_showCodeInput)
                        {
                            <MudPaper Class="pa-3 mt-3" Elevation="1">
                                <MudText Typo="Typo.subtitle2" Class="mb-2">Step 2: Enter Authorization Code</MudText>
                                <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mb-2">
                                    After authorizing in Anthropic, you'll see an authorization code. Copy and paste it here:
                                </MudText>
                                <MudTextField @bind-Value="_authorizationCode" 
                                              Label="Authorization Code" 
                                              Variant="Variant.Outlined"
                                              Placeholder="Paste the code from Anthropic here"
                                              Class="mb-2" />
                                <MudButton Color="Color.Primary" 
                                          Variant="Variant.Filled"
                                          OnClick="@SubmitAuthorizationCode"
                                          Disabled="@(string.IsNullOrWhiteSpace(_authorizationCode) || _anthropicOAuthLoading)">
                                    @if (_anthropicOAuthLoading)
                                    {
                                        <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                                        <MudText Class="ms-2">Submitting...</MudText>
                                    }
                                    else
                                    {
                                        <MudText>Submit Code</MudText>
                                    }
                                </MudButton>
                            </MudPaper>
                        }
                        else
                        {
                            <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mt-2">
                                Click "Connect to Anthropic" to open the authorization page in a new tab.
                            </MudText>
                        }
                        
                        @if (_anthropicOAuthError != null)
                        {
                            <MudAlert Severity="Severity.Error" Class="mt-3">
                                @GetOAuthErrorMessage(_anthropicOAuthError)
                                @if (GetOAuthErrorRecoveryAction(_anthropicOAuthError) != null)
                                {
                                    <br/>
                                    <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mt-2">
                                        @GetOAuthErrorRecoveryAction(_anthropicOAuthError)
                                    </MudText>
                                }
                            </MudAlert>
                        }
                    }
                }
                }
            </MudStep>
            
            <MudStep Title="Name & defaults">
                @if (_currentStep == 2)
                {
                <MudGrid>
                    <MudItem xs="12">
                        <MudTextField @bind-Value="_agentName" 
                                      Label="Agent name" 
                                      Variant="Variant.Outlined" 
                                      Required="true"
                                      Error="@(!string.IsNullOrEmpty(_agentNameError))"
                                      ErrorText="@_agentNameError" />
                    </MudItem>
                    
                    <MudItem xs="12">
                        <MudSelect @bind-Value="_selectedModel" 
                                  Label="Model (recommended default)" 
                                  Variant="Variant.Outlined">
                            @foreach (var model in GetAvailableModels())
                            {
                                <MudSelectItem Value="@model.Value">@model.Key</MudSelectItem>
                            }
                        </MudSelect>
                    </MudItem>
                    
                    <MudItem xs="12">
                        <MudCheckBox @bind-Value="_setAsDefault" 
                                    Label="Set as default agent" />
                    </MudItem>
                    
                    <MudItem xs="12">
                        <MudExpansionPanels Elevation="0">
                            <MudExpansionPanel Text="Advanced settings" MaxHeight="300">
                                <MudGrid>
                                    <MudItem xs="12" sm="6">
                                        <MudNumericField @bind-Value="_temperature" 
                                                        Label="Temperature" 
                                                        Variant="Variant.Outlined" 
                                                        Min="0.0" 
                                                        Max="2.0" 
                                                        Step="0.1" />
                                    </MudItem>
                                    
                                    <MudItem xs="12" sm="6">
                                        <MudNumericField @bind-Value="_maxTokens" 
                                                        Label="Max tokens" 
                                                        Variant="Variant.Outlined" 
                                                        Min="100" 
                                                        Max="8000" 
                                                        Step="100" />
                                    </MudItem>
                                    
                                    <MudItem xs="12">
                                        <MudTextField @bind-Value="_workingDirectory" 
                                                      Label="Working directory" 
                                                      Variant="Variant.Outlined" 
                                                      Placeholder="@Environment.CurrentDirectory" />
                                    </MudItem>
                                </MudGrid>
                            </MudExpansionPanel>
                        </MudExpansionPanels>
                    </MudItem>
                </MudGrid>
                }
            </MudStep>
            
            <!-- Step 4: Create & Test -->
            <MudStep Title="Create & test">
                @if (_currentStep == 3)
                {
                @if (_creationStep == CreationStep.Creating)
                {
                    <MudText Typo="Typo.body1" Class="mb-3">Creating agent...</MudText>
                    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="mb-3" />
                }
                else if (_creationStep == CreationStep.Testing)
                {
                    <MudText Typo="Typo.body1" Class="mb-3">Testing a quick message...</MudText>
                    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="mb-3" />
                    
                    @if (_testMessages.Any())
                    {
                        <MudPaper Class="pa-3 mb-3" Elevation="1">
                            @foreach (var message in _testMessages)
                            {
                                <MudText Typo="Typo.body2" Class="mb-1">@message</MudText>
                            }
                        </MudPaper>
                    }
                }
                else if (_creationStep == CreationStep.Success)
                {
                    <MudAlert Severity="Severity.Success" Class="mb-3">
                        All set! Start chatting.
                    </MudAlert>
                    
                    @if (_testMessages.Any())
                    {
                        <MudPaper Class="pa-3 mb-3" Elevation="1">
                            <MudText Typo="Typo.subtitle2" Class="mb-2">Test Response:</MudText>
                            @foreach (var message in _testMessages)
                            {
                                <MudText Typo="Typo.body2" Class="mb-1">@message</MudText>
                            }
                        </MudPaper>
                    }
                }
                else if (_creationStep == CreationStep.Error)
                {
                    <MudAlert Severity="Severity.Error" Class="mb-3">
                        @_creationError
                        @if (!string.IsNullOrEmpty(_creationFixAction))
                        {
                            <MudButton Color="Color.Error" Variant="Variant.Text" Class="ml-2" OnClick="@RetryCreation">
                                @_creationFixAction
                            </MudButton>
                        }
                    </MudAlert>
                }
                }
            </MudStep>
        </MudStepper>
    </DialogContent>
    
    <DialogActions>
        <MudButton OnClick="@(() => OnVisibilityChanged(false))" Disabled="@_isProcessing">Cancel</MudButton>
        <MudSpacer />
        <MudButton Color="Color.Primary" 
                   Variant="Variant.Filled" 
                   OnClick="@HandlePrimaryAction"
                   Disabled="@(!CanProceed() || _isProcessing)">
            @GetPrimaryActionText()
        </MudButton>
    </DialogActions>
</MudDialog>